name: publish artifacts
on:
  workflow_dispatch:
jobs:
  tests:
    uses: Adjective-Object/good-fences-rs-core/.github/workflows/unittest.yml@main
  check-versions:
    outputs:
      hasversionbumps: ${{ steps.cpv-main.is-new-version == 'true' && steps.cpv-win.is-new-version == 'true' && steps.cpv-darwin.is-new-version == 'true' && steps.cpv-linux.is-new-version == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: check main package version
        id: cpv-main
        uses: PostHog/check-package-version@v2
      - name: check main package version
        id: cpv-darwin
        uses: PostHog/check-package-version@v2
        with:
          path: npm/darwin-x64/package.json
      - name: check main package version
        id: cpv-linux
        uses: PostHog/check-package-version@v2
        with:
          path: npm/linux-x64-gnu/package.json
      - name: check main package version
        id: cpv-win
        uses: PostHog/check-package-version@v2
        with:
          path: npm/win32-x64-msvc/package.json
      - name: Tag release
        if: ${{ steps.check-new-version-step.outputs.ANY_NEW_VERSION == 1 }}
        run: >
          ./scripts/tag-versions.sh;
          git push --tags;
  publish:
    if: needs.check-versions.outputs.hasversionbumps == 1
    needs:
      - tests
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: pull win artifacts
        uses: actions/download-artifact@v3
        with:
          name: windows-napi
      - name: pull linux artifacts
        uses: actions/download-artifact@v3
        with:
          name: linux-napi
      - name: pull macos artifacts
        uses: actions/download-artifact@v3
        with:
          name: macos-napi
      - name: pull js files
        uses: actions/download-artifact@v3
        with:
          name: js-files
      - name: display artifacts
        run: ls -R
      - name: install deps
        run: yarn install
      - name: copy artifacts
        run: |
          mkdir artifacts
          yarn artifacts
      - name: Publish
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
          npm publish --access public
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}